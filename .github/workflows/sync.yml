name: Kaggle Notebook Sync
on: [workflow_dispatch]

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Kaggle API (Official Method)
        run: |
          pip install --upgrade pip
          pip install kaggle --upgrade --no-cache-dir
          sudo apt-get install -y jq  # For JSON parsing

      - name: Configure Kaggle Credentials
        run: |
          mkdir -p ~/.kaggle
          # Create config with proper escaping
          echo "{\"username\":\"${{ secrets.KAGGLE_USERNAME }}\",\"key\":\"${{ secrets.KAGGLE_KEY }}\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json
          
          # Verify file was created correctly
          echo "Kaggle config:"
          cat ~/.kaggle/kaggle.json | jq .

      - name: Validate Credentials
        run: |
          export PATH=$PATH:~/.local/bin
          echo "Testing credentials..."
          RESPONSE=$(curl -s -H "Authorization: Kaggle ${{ secrets.KAGGLE_KEY }}" \
            "https://www.kaggle.com/api/v1/users/check?username=${{ secrets.KAGGLE_USERNAME }}")
          echo "API Response: $RESPONSE"
          if [[ "$RESPONSE" == *"success"* ]]; then
            echo "‚úÖ Authentication successful!";
          else
            echo "‚ùå Authentication failed";
            exit 1;
          fi

      - name: Pull Notebook
        run: |
          export PATH=$PATH:~/.local/bin
          echo "Pulling notebook..."
          kaggle kernels pull ${{ secrets.KAGGLE_USERNAME }}/YOUR_NOTEBOOK_SLUG -p ./notebooks/
          ls -la ./notebooks/

      - name: Verify Download
        run: |
          if [ -f "./notebooks/"*.ipynb ]; then
            echo "üéâ Notebook downloaded successfully!";
            exit 0;
          else
            echo "‚ùå Download failed - no .ipynb file found";
            exit 1;
          fi
