name: Kaggle Notebook Sync
on: [workflow_dispatch]

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Kaggle CLI
        run: |
          pip install --upgrade pip
          pip install kaggle==1.6.0 --force-reinstall
          sudo chmod a+r /opt/hostedtoolcache/Python/*/x64/lib/python*/site-packages/kaggle/__init__.py

      - name: Configure Kaggle (Triple Authentication)
        run: |
          mkdir -p ~/.kaggle
          # Method 1: Config file
          echo '{
            "username":"adelanseur",
            "key":"${{ secrets.KAGGLE_KEY }}"
          }' > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json
          
          # Method 2: Environment variables
          echo "KAGGLE_USERNAME=adelanseur" >> $GITHUB_ENV
          echo "KAGGLE_KEY=${{ secrets.KAGGLE_KEY }}" >> $GITHUB_ENV
          
          # Method 3: Direct API call
          echo "=== Testing Direct Auth ==="
          python -c "
          from kaggle.api.kaggle_api_extended import KaggleApi
          api = KaggleApi({'username':'adelanseur','key':'${{ secrets.KAGGLE_KEY }}'})
          api.authenticate()
          print('✅ Direct auth successful')"

      - name: Pull Notebook
        run: |
          export PATH=$PATH:~/.local/bin
          export KAGGLE_USERNAME=adelanseur
          export KAGGLE_KEY=${{ secrets.KAGGLE_KEY }}
          
          echo "=== Pull Attempt ==="
          kaggle kernels pull adelanseur/manga-sales-eda-ml -p ./notebooks/ || \
          (echo "Pull failed, trying alternative method..." && \
           python -m kaggle.cli kernels pull adelanseur/manga-sales-eda-ml -p ./notebooks/)
          
          ls -la ./notebooks/

      - name: Convert to HTML
        run: |
          [ -f "./notebooks/manga-sales-eda-ml.ipynb" ] && {
            jupyter nbconvert ./notebooks/*.ipynb --to html
            echo "✅ Conversion successful"
          } || echo "⚠️ No notebook found to convert"
