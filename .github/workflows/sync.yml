name: Sync Kaggle Notebooks

on: [workflow_dispatch]

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install --upgrade pip kaggle nbconvert ipykernel

      - name: Configure Kaggle API
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
        run: |
          mkdir -p ~/.kaggle
          echo '{"username":"'$KAGGLE_USERNAME'","key":"'$KAGGLE_KEY'"}' > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Clean Previous Outputs
        run: |
          rm -rf Kaggle-top-3-notebook
          mkdir -p Kaggle-top-3-notebook

      - name: Download Notebooks into Subfolders
        run: |
          mkdir -p Kaggle-top-3-notebook

          # Manga Sales
          kaggle kernels pull adelanseur/manga-sales-eda-ml -p Kaggle-top-3-notebook
          mkdir -p Kaggle-top-3-notebook/1_Manga_Sales/images
          mv Kaggle-top-3-notebook/manga-sales-eda-ml.ipynb Kaggle-top-3-notebook/1_Manga_Sales/notebook.ipynb

          # Clustering
          kaggle kernels pull adelanseur/clustering-pca-k-means -p Kaggle-top-3-notebook
          mkdir -p Kaggle-top-3-notebook/2_Clustering_PCA_KMeans/images
          mv Kaggle-top-3-notebook/clustering-pca-k-means.ipynb Kaggle-top-3-notebook/2_Clustering_PCA_KMeans/notebook.ipynb

          # NLP GRU
          kaggle kernels pull adelanseur/nlp-gru-emotions-analysis -p Kaggle-top-3-notebook
          mkdir -p Kaggle-top-3-notebook/3_NLP_GRU_Emotions/images
          mv Kaggle-top-3-notebook/nlp-gru-emotions-analysis.ipynb Kaggle-top-3-notebook/3_NLP_GRU_Emotions/notebook.ipynb

      - name: Execute Notebooks
        run: |
          for folder in Kaggle-top-3-notebook/*/; do
            nb="$folder/notebook.ipynb"
            echo "▶️ Executing $nb"
            jupyter nbconvert --to notebook --inplace --execute --ExecutePreprocessor.timeout=300 "$nb" || echo "⚠️ Failed to execute $nb"
          done

      - name: Convert Notebooks to HTML
        run: |
          for folder in Kaggle-top-3-notebook/*/; do
            nb="$folder/notebook.ipynb"
            html="$folder/output.html"
            jupyter nbconvert --to html --output "$html" "$nb" || echo "⚠️ Failed to convert $nb to HTML"
          done

      - name: Commit Changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

          git add -f Kaggle-top-3-notebook/**/*
          git status

          git commit -m "chore: Sync and execute notebooks on $(date +'%Y-%m-%d')" || \
            (echo "⚠️ No changes to commit" && git commit --allow-empty -m "chore: No notebook changes but ran successfully")

          git push
