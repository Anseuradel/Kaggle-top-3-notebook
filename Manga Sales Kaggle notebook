{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":6140166,"sourceType":"datasetVersion","datasetId":3520964}],"dockerImageVersionId":30527,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/adelanseur/manga-sales-eda-ml?scriptVersionId=168308955\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"<div style=\"background-color: #333; padding: 40px; border: 2px solid #ffd700; border-radius: 10px; color: #ffd700; text-align: center; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\">\n\n<h1 style=\"font-size: 48px; font-weight: bold; color: #ffd700;\">Manga sales</h1>\n\n<img src=\"https://cdn.vox-cdn.com/thumbor/9LmexHJGbr_iz4yBylSQAuZcqEc=/0x457:4032x2568/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/22481797/PXL_20210426_234210568.jpg\" alt=\"Movie Reel\" style=\"width: 500px; margin: 20px auto; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\">\n    \n</div>","metadata":{"_uuid":"a8e17ed0-d9b3-40ec-9620-75fa80e083db","_cell_guid":"ecdab9d3-338d-4246-bacc-2ba9fc4ba850","trusted":true}},{"cell_type":"markdown","source":"## <div style=\"border-radius: 10px; border: 2px solid #ffd700; padding: 15px; background-color: #333; font-size: 120%; text-align: center; color: #ffd700; font-weight: bold;\">Table of content</div>","metadata":{"_uuid":"16016456-3d91-4aeb-977f-3965a58b6ae8","_cell_guid":"96ccfcad-4988-43c9-873c-dda85b204e3e","trusted":true}},{"cell_type":"markdown","source":"<ul class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n    <li><a href=\"#0.-Introduction\">0. Introduction</a></li><br>\n    <li><a href=\"#1.-Import-Libraries\">1. Import Libraries</a></li><br>\n    <li><a href=\"#2.-Load-data\">2. Load data</a></li><br>\n    <li><a href=\"#3.-Exploratory-Data-Analysis\">3. Exploratory Data Analysis</a></li><br>\n    <li><a href=\"#4.-Modeling\">4. Modeling</a></li><br>\n</ul>","metadata":{"_uuid":"ad94fdff-e215-40d0-a1b5-7162201e3c22","_cell_guid":"f4f1fc0e-26aa-45b2-8754-389c17bc9197","trusted":true}},{"cell_type":"markdown","source":"## <div style=\"border-radius: 10px; border: 2px solid #ffd700; padding: 15px; background-color: #333; font-size: 120%; text-align: center; color: #ffd700; font-weight: bold;\">0. Introduction</div>","metadata":{}},{"cell_type":"markdown","source":"# Introduction\n\nThe manga industry is renowned for its diverse range of captivating stories and captivating characters, attracting millions of readers worldwide. Understanding the factors that influence manga sales is essential for publishers, authors, and enthusiasts alike. In this analysis, we delve into the intricate dynamics of manga sales, aiming to develop predictive models that accurately estimate the approximate sales of Japanese manga series.\n\n# Dataset Overview:\nOur dataset comprises various attributes related to manga series, including the title, author(s), publisher, target demographic, number of collected volumes, serialization details, and approximate sales figures. These attributes offer a comprehensive view of the manga landscape, allowing us to explore the multifaceted nature of manga sales.\n\n# Goals of Analysis:\n* Exploratory Analysis: We seek to uncover patterns and trends within the dataset, shedding light on the factors that contribute to manga sales success.\n\n* Predictive Modeling: Leveraging a diverse set of machine learning algorithms such as XGBoost, RandomForest, Linear Regression, and Gradient Boosting Regressor, we aim to develop predictive models capable of forecasting manga sales with precision.\n\n# Importance of Insights:\nBy providing valuable insights into manga sales trends, our analysis aims to empower stakeholders in the manga industry with actionable information. Whether it's optimizing marketing strategies, identifying promising titles, or understanding audience preferences, our findings offer a strategic advantage in navigating the dynamic landscape of manga publishing.\n\n","metadata":{}},{"cell_type":"markdown","source":"## <div style=\"border-radius: 10px; border: 2px solid #ffd700; padding: 15px; background-color: #333; font-size: 120%; text-align: center; color: #ffd700; font-weight: bold;\">1. Import Libraries</div>","metadata":{"_uuid":"82832e8e-cbba-42dc-9442-77e52632cf92","_cell_guid":"3a1eeba4-041b-4a96-995f-6f8ee0491d2c","trusted":true}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV, KFold\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.linear_model import LinearRegression","metadata":{"_uuid":"a4c5aab6-4bee-4231-86fc-0281184369b1","_cell_guid":"e9cfa85d-7bb8-4b79-851e-95a5624f3d19","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:31.979567Z","iopub.execute_input":"2024-03-22T17:03:31.980264Z","iopub.status.idle":"2024-03-22T17:03:31.989332Z","shell.execute_reply.started":"2024-03-22T17:03:31.980185Z","shell.execute_reply":"2024-03-22T17:03:31.98802Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## <div style=\"border-radius: 10px; border: 2px solid #ffd700; padding: 15px; background-color: #333; font-size: 120%; text-align: center; color: #ffd700; font-weight: bold;\">2. Load data</div>","metadata":{"_uuid":"6e24d993-a38f-459f-9a2e-b0a90aca0561","_cell_guid":"7c2a1f7c-4182-4a59-931a-6b2e4ddb0abd","trusted":true}},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/best-selling-manga/best-selling-manga.csv\").drop_duplicates()\ndf.head()","metadata":{"_uuid":"97f09aaf-4572-41f2-a973-4f1cdaec13cf","_cell_guid":"bb4d7cc9-65b4-423d-950c-ce8c8d9e8506","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:31.991095Z","iopub.execute_input":"2024-03-22T17:03:31.992098Z","iopub.status.idle":"2024-03-22T17:03:32.040817Z","shell.execute_reply.started":"2024-03-22T17:03:31.992058Z","shell.execute_reply":"2024-03-22T17:03:32.039054Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.info()","metadata":{"_uuid":"fa97a116-35b9-4387-ada0-eccb9c5657ae","_cell_guid":"65fb2086-642e-4835-8f0d-422c92940c7f","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:32.043063Z","iopub.execute_input":"2024-03-22T17:03:32.043634Z","iopub.status.idle":"2024-03-22T17:03:32.061142Z","shell.execute_reply.started":"2024-03-22T17:03:32.043572Z","shell.execute_reply":"2024-03-22T17:03:32.059763Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.describe()","metadata":{"_uuid":"6ad3a80c-985e-4748-8bad-8019e992ae6d","_cell_guid":"b03d79bb-0f9c-4213-b5dc-644b7e5bf490","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:32.063959Z","iopub.execute_input":"2024-03-22T17:03:32.064434Z","iopub.status.idle":"2024-03-22T17:03:32.095871Z","shell.execute_reply.started":"2024-03-22T17:03:32.064394Z","shell.execute_reply":"2024-03-22T17:03:32.094228Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## <div style=\"border-radius: 10px; border: 2px solid #ffd700; padding: 15px; background-color: #333; font-size: 120%; text-align: center; color: #ffd700; font-weight: bold;\">3. Exploratory Data Analysis</div>","metadata":{"_uuid":"0a7bd7d8-e221-4a44-a335-33654978d1cc","_cell_guid":"7f8cca1f-9d6f-497f-8796-d1fd8b311dc9","trusted":true}},{"cell_type":"markdown","source":"### I | Check duplicates","metadata":{"_uuid":"ab650d0c-3fd2-4605-9fa4-e022878fceab","_cell_guid":"4642f135-f63f-43b3-be92-f196f70a6cdc","trusted":true}},{"cell_type":"markdown","source":"We verified the presence of duplicates in the dataset to ensure data integrity.","metadata":{}},{"cell_type":"code","source":"duplicates = df.duplicated().sum()\nprint(duplicates)","metadata":{"_uuid":"b7b404b2-1ff9-4581-a88c-a6e31b3b2b89","_cell_guid":"4f34cf2b-7236-4970-b497-7f0d4e117854","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:32.099607Z","iopub.execute_input":"2024-03-22T17:03:32.100083Z","iopub.status.idle":"2024-03-22T17:03:32.110703Z","shell.execute_reply.started":"2024-03-22T17:03:32.100047Z","shell.execute_reply":"2024-03-22T17:03:32.109147Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### II | Check null and missing values","metadata":{"_uuid":"72831596-7710-4588-be13-dfd3c37be3ec","_cell_guid":"31965107-2e53-484d-b10a-ac422ed538bb","trusted":true}},{"cell_type":"markdown","source":"Analysis was performed to identify and address null or missing values, crucial for data quality and model training.","metadata":{}},{"cell_type":"code","source":"missing_values = df.isnull().sum()\ntotal_missing_values = (missing_values).sum()\ntotal_cells = np.product(df.shape)\npercent_missing_values = (total_missing_values / total_cells)*100\nprint(\"Percent of data that is missing\", percent_missing_values)\nprint(missing_values)","metadata":{"_uuid":"721c7ccf-e120-4397-a42f-a32e5b5b0e3a","_cell_guid":"8e927fb0-0520-4ffe-9cac-94962281aad4","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:32.112625Z","iopub.execute_input":"2024-03-22T17:03:32.113051Z","iopub.status.idle":"2024-03-22T17:03:32.124824Z","shell.execute_reply.started":"2024-03-22T17:03:32.112966Z","shell.execute_reply":"2024-03-22T17:03:32.123537Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### III | Check unique values in each columns","metadata":{"_uuid":"3d34de2e-f887-4229-9a96-777740c81671","_cell_guid":"b8479ad9-fa48-45b8-90d4-d807ad92d223","trusted":true}},{"cell_type":"markdown","source":"A detailed examination of unique values in each column provides insights into data distribution and diversity.","metadata":{}},{"cell_type":"code","source":"for column in df.columns:\n    num_distinct_values = len(df[column].unique())\n    print(f\"{column}: {num_distinct_values} distinct values\")","metadata":{"_uuid":"0b7d4229-4d91-488c-ba8b-6ce8494847ab","_cell_guid":"7e21b7a6-3aa5-4465-b848-1f501393679f","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:32.126294Z","iopub.execute_input":"2024-03-22T17:03:32.126663Z","iopub.status.idle":"2024-03-22T17:03:32.13898Z","shell.execute_reply.started":"2024-03-22T17:03:32.126631Z","shell.execute_reply":"2024-03-22T17:03:32.137711Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### IV | Correlation Analysis","metadata":{"_uuid":"704e0106-401d-46d8-a987-d89bfb255244","_cell_guid":"17f0e270-45e3-4f39-a686-313ffaad737d","trusted":true}},{"cell_type":"markdown","source":"Correlation matrix visualization helps understand the relationships between numerical features and the target variable, facilitating feature selection.","metadata":{}},{"cell_type":"code","source":"numeric_columns = df.select_dtypes(include=[np.number])\ncorrelation_matrix = numeric_columns.corr()\ncorrelation_matrix","metadata":{"_uuid":"394d79d5-41ed-4cbe-88d9-b624c8a0e264","_cell_guid":"61217f78-9fcd-4365-a553-11e00f2de38a","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:32.140393Z","iopub.execute_input":"2024-03-22T17:03:32.140801Z","iopub.status.idle":"2024-03-22T17:03:32.162909Z","shell.execute_reply.started":"2024-03-22T17:03:32.140767Z","shell.execute_reply":"2024-03-22T17:03:32.161732Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fig, ax = plt.subplots() \nfig.set_size_inches(12,8)\nsns.heatmap(correlation_matrix, vmax =.8, square = True, annot = True,cmap='YlGn' )\nplt.title('Correlation Matrix',fontsize=15);","metadata":{"_uuid":"29c824f4-cae9-4336-98af-7b1de125b920","_cell_guid":"e2017d0f-2351-424b-bc76-7464397a31a7","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:32.164045Z","iopub.execute_input":"2024-03-22T17:03:32.164426Z","iopub.status.idle":"2024-03-22T17:03:32.678406Z","shell.execute_reply.started":"2024-03-22T17:03:32.164393Z","shell.execute_reply":"2024-03-22T17:03:32.677317Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"publisher_counts = df[\"Publisher\"].value_counts()\n\n# Plot count of publishers\nplt.figure(figsize=(15, 8))\nplt.subplot(1, 2, 1)\nsns.barplot(x=publisher_counts.index, y=publisher_counts.values, color='deepskyblue')\nplt.xlabel('Publishers')\nplt.ylabel('Count')\nplt.title('Count of Publishers')\nplt.xticks(rotation=45, ha='right', fontsize=8)\n\n# Plot publishers by sales\nplt.subplot(1, 2, 2)\nsns.barplot(x='Publisher', y='Approximate sales in million(s)', data=df, estimator=sum, errorbar=None, color='limegreen')\nplt.xlabel('Publishers')\nplt.ylabel('Sales (in million)')\nplt.title('Publishers by Sales')\nplt.xticks(rotation=45, ha='right', fontsize=8)\n\nplt.tight_layout()\nplt.show()","metadata":{"_uuid":"c6f930e0-f516-4a79-a3d6-cd83c0b38fbb","_cell_guid":"2e60f103-432b-43ff-b5a4-5dac7b0c7708","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:32.681605Z","iopub.execute_input":"2024-03-22T17:03:32.682717Z","iopub.status.idle":"2024-03-22T17:03:33.753992Z","shell.execute_reply.started":"2024-03-22T17:03:32.682672Z","shell.execute_reply":"2024-03-22T17:03:33.752336Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"demographic_counts = df[\"Demographic\"].value_counts()\n\n# Plot count of publishers\nplt.figure(figsize=(15, 8))\nplt.subplot(1, 2, 1)\nsns.barplot(x=demographic_counts.index, y=demographic_counts.values, color='deepskyblue')\nplt.xlabel('Demographic')\nplt.ylabel('Count')\nplt.title('Count of Demographic')\nplt.xticks(rotation=45, ha='right', fontsize=8)\n\n# Plot publishers by sales\nplt.subplot(1, 2, 2)\nsns.barplot(x='Demographic', y='Approximate sales in million(s)', data=df, estimator=sum, errorbar=None, color='limegreen')\nplt.xlabel('Demographic')\nplt.ylabel('Sales (in million)')\nplt.title('Demographic by Sales')\nplt.xticks(rotation=45, ha='right', fontsize=8)\n\nplt.tight_layout()\nplt.show()","metadata":{"_uuid":"2d27e158-5c71-4a81-a517-2476394e67d5","_cell_guid":"5bea664e-a8d4-4f2b-9397-a26a386d1723","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:16:46.291605Z","iopub.execute_input":"2024-03-22T17:16:46.29214Z","iopub.status.idle":"2024-03-22T17:16:47.047031Z","shell.execute_reply.started":"2024-03-22T17:16:46.292103Z","shell.execute_reply":"2024-03-22T17:16:47.045577Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"top_authors = df.groupby('Author(s)')['Approximate sales in million(s)'].sum().nlargest(10)\n\n# Plotting the top 10 authors by sales\nplt.figure(figsize=(12, 8))\nsns.barplot(x=top_authors.values, y=top_authors.index)\nplt.xlabel('Approximate sales in millions')\nplt.ylabel('Authors')\nplt.title('Top 10 Authors by Sales')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()","metadata":{"_uuid":"94695af8-a8ad-41c5-9ec5-e576513367d2","_cell_guid":"82a235bd-88e4-455c-ba37-f2a7fb50923d","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:34.513353Z","iopub.execute_input":"2024-03-22T17:03:34.514068Z","iopub.status.idle":"2024-03-22T17:03:35.040213Z","shell.execute_reply.started":"2024-03-22T17:03:34.514024Z","shell.execute_reply":"2024-03-22T17:03:35.03851Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"Authors_by_volume = df.groupby('Author(s)')[\"No. of collected volumes\"].sum()\ntop_volume = Authors_by_volume.sort_values(ascending=False).head(10)\n\nplt.figure(figsize=(12, 8))\nsns.barplot(x=top_volume.values, y=top_volume.index)  # Transpose x and y\nplt.xlabel('Number of Collected Volumes')\nplt.ylabel('Authors')\nplt.title('Top 10 Authors by Volumes')\nplt.tight_layout()\nplt.show()","metadata":{"_uuid":"27d68051-7ae2-424c-9a34-05fae4309bdf","_cell_guid":"f3befc8a-201d-46c4-a6f2-d5cf134bda30","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:35.042395Z","iopub.execute_input":"2024-03-22T17:03:35.04371Z","iopub.status.idle":"2024-03-22T17:03:35.590104Z","shell.execute_reply.started":"2024-03-22T17:03:35.043663Z","shell.execute_reply":"2024-03-22T17:03:35.588818Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(10, 6))\nsns.scatterplot(x='No. of collected volumes', y='Average sales per volume in million(s)', data=df, color='skyblue')\nplt.title('Relationship between Number of Collected Volumes and Average Sales per Volume')\nplt.xlabel('Number of Collected Volumes')\nplt.ylabel('Average Sales per Volume (in million(s))')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-03-22T17:17:00.372444Z","iopub.execute_input":"2024-03-22T17:17:00.372891Z","iopub.status.idle":"2024-03-22T17:17:00.684574Z","shell.execute_reply.started":"2024-03-22T17:17:00.372856Z","shell.execute_reply":"2024-03-22T17:17:00.6831Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"current_year = str(pd.Timestamp.now().year)\n\ndef serialized_to_date(df):\n    for i, serial in enumerate(df['Serialized']):\n        if '–' in serial:\n            # Split the string by comma and handle each part separately\n            serial_parts = [part.strip() for part in serial.split(',')]\n            start, end = serial_parts[0].rsplit('–', maxsplit=1)\n            end = end.replace('present', current_year).replace('(on hiatus)', '').strip()\n            df.at[i, 'Serialized_start'] = start.strip()\n            df.at[i, 'Serialized_end'] = end\n    # Convert the 'Serialized_start' and 'Serialized_end' columns to datetime objects\n    df['Serialized_start'] = pd.to_datetime(df['Serialized_start'], errors='coerce')\n    df['Serialized_end'] = pd.to_datetime(df['Serialized_end'], errors='coerce')\n    display(df.head())\n\nserialized_to_date(df)","metadata":{"_uuid":"c1c87725-c5a0-4bfa-a38e-2c97c94fb0b6","_cell_guid":"1c4990e2-a743-423d-a754-1849172b7ac8","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:35.591443Z","iopub.execute_input":"2024-03-22T17:03:35.5918Z","iopub.status.idle":"2024-03-22T17:03:35.633747Z","shell.execute_reply.started":"2024-03-22T17:03:35.59177Z","shell.execute_reply":"2024-03-22T17:03:35.632714Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Drop rows with missing values in 'Serialized_start' and 'Serialized_end'\nvalid_rows = df.dropna(subset=['Serialized_start', 'Serialized_end'])\n\n# Create a new column for the active year of the mangaka\nvalid_rows['Active_Year'] = valid_rows['Serialized_end'].dt.year - valid_rows['Serialized_start'].dt.year\n\n# Select top N authors based on sales\ntop_authors = valid_rows.groupby('Author(s)')['Approximate sales in million(s)'].sum().nlargest(20).index\nvalid_rows = valid_rows[valid_rows['Author(s)'].isin(top_authors)]\n\n\nplt.figure(figsize=(12, 8))\nsns.scatterplot(data=valid_rows, x='Active_Year', y='Approximate sales in million(s)', hue='Author(s)', palette='viridis')\nplt.xlabel('Active Year of Mangaka')\nplt.ylabel('Approximate Sales in Million(s)')\nplt.title('Sales vs. Active Year of Mangaka')\nplt.legend(title='Author(s)', bbox_to_anchor=(1.05, 1), loc='upper left')\nplt.tight_layout()\nplt.show()","metadata":{"_uuid":"5f893c01-261b-481c-860d-816eca85ed59","_cell_guid":"e187a29b-594a-45ee-8240-b5fa6565c658","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:35.635519Z","iopub.execute_input":"2024-03-22T17:03:35.635891Z","iopub.status.idle":"2024-03-22T17:03:36.851555Z","shell.execute_reply.started":"2024-03-22T17:03:35.635854Z","shell.execute_reply":"2024-03-22T17:03:36.849591Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## <div style=\"border-radius: 10px; border: 2px solid #ffd700; padding: 15px; background-color: #333; font-size: 120%; text-align: center; color: #ffd700; font-weight: bold;\">4. Modeling</div>","metadata":{"_uuid":"16bbf32c-6def-4e66-b83d-ba010e601904","_cell_guid":"efba0160-c23a-40d7-8f0f-850e8ff40275","trusted":true}},{"cell_type":"markdown","source":"We split the dataset into training and testing sets and applied cross-validation techniques along with hyperparameter tuning using GridSearchCV to optimize model performance.","metadata":{}},{"cell_type":"code","source":"target = 'Approximate sales in million(s)'\nobject_columns = df.select_dtypes(include=['object','datetime64']).columns\ncolumns_to_drop = [target] + list(object_columns)\n\nX = df.drop(columns = columns_to_drop ,axis=1)\ny = df[target]","metadata":{"_uuid":"883e8894-84c6-4868-bdbe-d7eeba629b61","_cell_guid":"fdb99826-5d08-4aa7-abd4-c6699b8c6895","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:36.853366Z","iopub.execute_input":"2024-03-22T17:03:36.853895Z","iopub.status.idle":"2024-03-22T17:03:36.864763Z","shell.execute_reply.started":"2024-03-22T17:03:36.853853Z","shell.execute_reply":"2024-03-22T17:03:36.863194Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.5, random_state=0)\nprint(X_train.shape, y_train.shape)","metadata":{"_uuid":"584b4820-a233-4dc3-bdc7-53070b7b85ac","_cell_guid":"1ca24ab3-51f5-4329-9c32-e27b6a575c22","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:36.866954Z","iopub.execute_input":"2024-03-22T17:03:36.867474Z","iopub.status.idle":"2024-03-22T17:03:36.881948Z","shell.execute_reply.started":"2024-03-22T17:03:36.867422Z","shell.execute_reply":"2024-03-22T17:03:36.880212Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"To achieve the goal of predicting approximate sales, I employed several machine learning models, including XGBoost, Random Forest, Linear Regression, and Gradient Boosting Regressor.","metadata":{"_uuid":"841ff3d4-ded7-42a6-b046-7593206890f0","_cell_guid":"043528eb-3bfe-4fa9-9ff8-f0fcfb17b124","trusted":true}},{"cell_type":"code","source":"# Create dictionaries to store RMSE and MAE results\nrmse_results = {}\nmae_results = {}\n\nmodels = [\n    (XGBRegressor(), \"XGBoost\", {'n_estimators': [100, 200, 300], 'max_depth': [3, 5, 7]}),\n    (RandomForestRegressor(), \"RF\", {'n_estimators': [100, 200, 300], 'max_depth': [None, 5, 10]}),\n    (LinearRegression(), \"LR\", {}),\n    (GradientBoostingRegressor(), \"GBR\", {'n_estimators': [100, 200, 300], 'max_depth': [3, 5, 7]})\n        ]\n\nfor model, model_name, param_grid in models:\n    # Perform cross-validation with GridSearchCV\n    grid_search = GridSearchCV(estimator=model, param_grid=param_grid, scoring='neg_mean_squared_error', cv=KFold(n_splits=5))\n    grid_search.fit(X_train, y_train)\n    \n    # Get the best model and its parameters\n    best_model = grid_search.best_estimator_\n    best_params = grid_search.best_params_\n    \n    # Evaluate the best model on the test set\n    y_pred = best_model.predict(X_test)\n    rmse = np.sqrt(mean_squared_error(y_test, y_pred))\n    mae = mean_absolute_error(y_test, y_pred)\n    \n    # Store the results\n    rmse_results[model_name] = rmse\n    mae_results[model_name] = mae\n    \n    # Print the results\n    print(\"Model :\", model_name)\n    print(\"Best Parameters:\", best_params)\n    print(f\"RMSE : {rmse:.2f}\")\n    print(f\"MAE : {mae:.2f}\")\n    print(\"--------\")","metadata":{"_uuid":"b7078b59-1bd2-45aa-ac4d-20d4db016036","_cell_guid":"eb67a298-41a4-4a7e-b1bd-866cf7dd28b0","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:03:36.884384Z","iopub.execute_input":"2024-03-22T17:03:36.88496Z","iopub.status.idle":"2024-03-22T17:04:06.582506Z","shell.execute_reply.started":"2024-03-22T17:03:36.884912Z","shell.execute_reply":"2024-03-22T17:04:06.58076Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Create bar charts to visualize RMSE and MAE\nfig, axes = plt.subplots(2, 1, figsize=(10, 8))\n\n# Plot RMSE results\naxes[0].bar(rmse_results.keys(), rmse_results.values(), color='skyblue')\naxes[0].set_title('Root Mean Squared Error (RMSE)')\naxes[0].set_ylabel('RMSE Value')\n\n# Plot MAE results\naxes[1].bar(mae_results.keys(), mae_results.values(), color='lightcoral')\naxes[1].set_title('Mean Absolute Error (MAE)')\naxes[1].set_ylabel('MAE Value')\n\nplt.tight_layout()\nplt.show()","metadata":{"_uuid":"bebc45c8-91de-4d0c-8ee2-6a2f4226f7c3","_cell_guid":"1702a77a-3033-447a-869a-f7483742bf68","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2024-03-22T17:04:06.584356Z","iopub.execute_input":"2024-03-22T17:04:06.584798Z","iopub.status.idle":"2024-03-22T17:04:07.164173Z","shell.execute_reply.started":"2024-03-22T17:04:06.584731Z","shell.execute_reply":"2024-03-22T17:04:07.162766Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Model Performance Analysis:\n\n* XGBoost:\nThe XGBoost model performed admirably, achieving an RMSE of 21.70 and an MAE of 8.27. The optimal hyperparameters for this model were found to be a maximum depth of 3 and 300 estimators. XGBoost's ability to handle complex relationships within the data contributed to its superior performance compared to other models.\n\n* Random Forest:\nRandom Forest, while exhibiting decent performance, fell short of XGBoost's accuracy with an RMSE of 35.10 and an MAE of 12.52. The model was configured with 300 estimators and no maximum depth restriction, which may have led to slightly inferior performance compared to XGBoost.\n\n* Linear Regression:\nLinear Regression, despite its simplicity, yielded the highest RMSE of 45.17 and MAE of 22.53 among the tested models. This indicates that the linear model struggled to capture the nonlinear relationships inherent in the dataset, resulting in poorer predictive performance.\n\n* Gradient Boosting Regressor:\nThe Gradient Boosting Regressor demonstrated competitive performance, achieving an RMSE of 29.19 and an MAE of 11.01. Similar to XGBoost, the optimal hyperparameters for this model included a maximum depth of 3 and 300 estimators. The model's ability to sequentially train weak learners and focus on the residuals contributed to its effectiveness in predicting manga sales.","metadata":{"_uuid":"fd1bd809-79e0-406d-9b75-cd68b779d828","_cell_guid":"a9790ff7-72e2-4891-bae7-916974a71baa","trusted":true}},{"cell_type":"markdown","source":"<div style=\"border-radius: 10px; border: 2px solid #ffd700; padding: 15px; background-color: #001f3f; font-size: 120%; text-align: center; color: #ffd700; font-weight: bold;\">If you found this work helpful or valuable, I would greatly appreciate an upvote.</div>","metadata":{}}]}